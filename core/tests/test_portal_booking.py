from datetime import datetime, timedelta
from django.test import TestCase
from core.models import Client, Service, Booking
from core.utils_conflicts import has_conflict


class PortalConflictTests(TestCase):
    def setUp(self):
        self.client_obj = Client.objects.create(
            name="Duke",
            email="d@example.com",
            phone="888",
            address="888 Test St",
            status="active",
            stripe_customer_id="cus_Z"
        )
        self.service = Service.objects.create(
            code="walk30",
            name="Walk 30",
            duration_minutes=30,
            is_active=True
        )
        self.start = datetime(2025, 10, 25, 9, 0)
        self.end = self.start + timedelta(minutes=30)
        Booking.objects.create(
            client=self.client_obj,
            service=self.service,
            service_code=self.service.code,
            service_name=self.service.name,
            service_label=self.service.name,
            start_dt=self.start,
            end_dt=self.end,
            status="pending",
            location="Home",
            autogenerated=False,
        )

    def test_detects_overlap(self):
        # Starts 15 mins into existing -> overlaps
        s2 = self.start + timedelta(minutes=15)
        e2 = s2 + timedelta(minutes=30)
        self.assertTrue(has_conflict(self.client_obj, s2, e2))

    def test_no_overlap(self):
        s2 = self.end  # adjacent edge
        e2 = s2 + timedelta(minutes=30)
        self.assertFalse(has_conflict(self.client_obj, s2, e2))
