# Generated by Django 5.2.6 on 2025-09-16 23:32

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('stripe_customer_id', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('credit_cents', models.IntegerField(default=0)),
                ('status', models.CharField(default='active', max_length=20)),
                ('acquisition_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_service_date', models.DateTimeField(blank=True, null=True)),
                ('total_revenue_cents', models.IntegerField(default=0)),
                ('service_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'clients',
            },
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('days_of_week', models.CharField(max_length=50)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('service_code', models.CharField(max_length=50)),
                ('default_location', models.CharField(blank=True, max_length=200, null=True)),
                ('default_dogs', models.IntegerField(default=1)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stripe_subscription_id', models.CharField(max_length=100, unique=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('incomplete', 'Incomplete'), ('incomplete_expired', 'Incomplete Expired'), ('trialing', 'Trialing'), ('past_due', 'Past Due'), ('canceled', 'Canceled'), ('unpaid', 'Unpaid')], default='active', max_length=20)),
                ('service_code', models.CharField(help_text='Canonical service code from service_map', max_length=50)),
                ('service_name', models.CharField(help_text='Human readable service name', max_length=200)),
                ('schedule_days', models.CharField(help_text='Comma-separated days (MON,TUE,WED,etc.)', max_length=50, validators=[django.core.validators.RegexValidator(message='Days must be comma-separated 3-letter codes (e.g., MON,WED,FRI)', regex='^([A-Z]{3},)*[A-Z]{3}$')])),
                ('schedule_start_time', models.TimeField(help_text='Start time in HH:MM format')),
                ('schedule_end_time', models.TimeField(help_text='End time in HH:MM format')),
                ('schedule_location', models.CharField(blank=True, max_length=200, null=True)),
                ('schedule_dogs', models.IntegerField(help_text='Number of dogs for the service', validators=[django.core.validators.MinValueValidator(1)])),
                ('schedule_notes', models.TextField(blank=True, null=True)),
                ('created_from_stripe', models.BooleanField(default=True)),
                ('stripe_created_at', models.DateTimeField(blank=True, null=True)),
                ('last_sync_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to='core.client')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_dt', models.DateTimeField(help_text='Start date and time')),
                ('end_dt', models.DateTimeField(help_text='End date and time')),
                ('service_type', models.CharField(help_text='Service code', max_length=50)),
                ('service_name', models.CharField(help_text='Human readable service name', max_length=200)),
                ('location', models.CharField(blank=True, max_length=200, null=True)),
                ('dogs', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('notes', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('confirmed', 'Confirmed'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('canceled', 'Canceled'), ('no_show', 'No Show')], default='scheduled', max_length=20)),
                ('source', models.CharField(choices=[('manual', 'Manual'), ('subscription', 'Subscription'), ('recurring', 'Recurring')], default='manual', max_length=20)),
                ('created_from_sub_id', models.CharField(blank=True, help_text='Stripe subscription ID if created from subscription', max_length=100, null=True)),
                ('stripe_invoice_id', models.CharField(blank=True, max_length=100, null=True)),
                ('stripe_price_id', models.CharField(blank=True, max_length=100, null=True)),
                ('invoice_url', models.URLField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='core.client')),
                ('subscription', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bookings', to='core.subscription')),
            ],
            options={
                'ordering': ['start_dt'],
            },
        ),
        migrations.AddIndex(
            model_name='subscription',
            index=models.Index(fields=['stripe_subscription_id'], name='core_subscr_stripe__4e5b3f_idx'),
        ),
        migrations.AddIndex(
            model_name='subscription',
            index=models.Index(fields=['client', 'status'], name='core_subscr_client__39191e_idx'),
        ),
        migrations.AddIndex(
            model_name='subscription',
            index=models.Index(fields=['service_code'], name='core_subscr_service_2bd9aa_idx'),
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['client', 'start_dt'], name='core_bookin_client__e69d3e_idx'),
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['subscription', 'start_dt'], name='core_bookin_subscri_9fe8e5_idx'),
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['created_from_sub_id', 'start_dt'], name='core_bookin_created_6ae0f8_idx'),
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['status'], name='core_bookin_status_fe12a1_idx'),
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['service_type'], name='core_bookin_service_dd267d_idx'),
        ),
        migrations.AddConstraint(
            model_name='booking',
            constraint=models.UniqueConstraint(condition=models.Q(('created_from_sub_id__isnull', False)), fields=('created_from_sub_id', 'start_dt'), name='unique_subscription_booking'),
        ),
    ]
